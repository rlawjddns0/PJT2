//******************************************************************
// 
//  Generated by IDL to C++ Translator
//  
//  File name: ObjectXY_Dcps.h
//  Source: ssafy_msgs\msg\ObjectXY_.idl
//  Generated: timestamp removed to make the build reproducible
//  OpenSplice 6.9.190403OSS
//  
//******************************************************************
#ifndef _OBJECTXY_DCPS_H_
#define _OBJECTXY_DCPS_H_

#include "sacpp_mapping.h"
#include "dds_dcps.h"
#include "ObjectXY_.h"
#include "ssafy_msgs/msg/rosidl_typesupport_opensplice_cpp__visibility_control.h"


namespace ssafy_msgs
{
   namespace msg
   {
      namespace dds_
      {

         class ROSIDL_TYPESUPPORT_OPENSPLICE_CPP_PUBLIC_ssafy_msgs ObjectXY_TypeSupportInterface;

         typedef ObjectXY_TypeSupportInterface * ObjectXY_TypeSupportInterface_ptr;
         typedef DDS_DCPSInterface_var < ObjectXY_TypeSupportInterface> ObjectXY_TypeSupportInterface_var;
         typedef DDS_DCPSInterface_out < ObjectXY_TypeSupportInterface> ObjectXY_TypeSupportInterface_out;


         class ROSIDL_TYPESUPPORT_OPENSPLICE_CPP_PUBLIC_ssafy_msgs ObjectXY_DataWriter;

         typedef ObjectXY_DataWriter * ObjectXY_DataWriter_ptr;
         typedef DDS_DCPSInterface_var < ObjectXY_DataWriter> ObjectXY_DataWriter_var;
         typedef DDS_DCPSInterface_out < ObjectXY_DataWriter> ObjectXY_DataWriter_out;


         class ROSIDL_TYPESUPPORT_OPENSPLICE_CPP_PUBLIC_ssafy_msgs ObjectXY_DataReader;

         typedef ObjectXY_DataReader * ObjectXY_DataReader_ptr;
         typedef DDS_DCPSInterface_var < ObjectXY_DataReader> ObjectXY_DataReader_var;
         typedef DDS_DCPSInterface_out < ObjectXY_DataReader> ObjectXY_DataReader_out;


         class ROSIDL_TYPESUPPORT_OPENSPLICE_CPP_PUBLIC_ssafy_msgs ObjectXY_DataReaderView;

         typedef ObjectXY_DataReaderView * ObjectXY_DataReaderView_ptr;
         typedef DDS_DCPSInterface_var < ObjectXY_DataReaderView> ObjectXY_DataReaderView_var;
         typedef DDS_DCPSInterface_out < ObjectXY_DataReaderView> ObjectXY_DataReaderView_out;

         struct ObjectXY_Seq_uniq_ {};
         typedef DDS_DCPSUFLSeq < ObjectXY_, struct ObjectXY_Seq_uniq_> ObjectXY_Seq;
         typedef DDS_DCPSSequence_var < ObjectXY_Seq> ObjectXY_Seq_var;
         typedef DDS_DCPSSequence_out < ObjectXY_Seq> ObjectXY_Seq_out;
         class ROSIDL_TYPESUPPORT_OPENSPLICE_CPP_PUBLIC_ssafy_msgs ObjectXY_TypeSupportInterface
         :
            virtual public DDS::TypeSupport
         { 
         public:
            typedef ObjectXY_TypeSupportInterface_ptr _ptr_type;
            typedef ObjectXY_TypeSupportInterface_var _var_type;

            static ObjectXY_TypeSupportInterface_ptr _duplicate (ObjectXY_TypeSupportInterface_ptr obj);
            DDS::Boolean _local_is_a (const char * id);

            static ObjectXY_TypeSupportInterface_ptr _narrow (DDS::Object_ptr obj);
            static ObjectXY_TypeSupportInterface_ptr _unchecked_narrow (DDS::Object_ptr obj);
            static ObjectXY_TypeSupportInterface_ptr _nil () { return 0; }
            static const char * _local_id;
            ObjectXY_TypeSupportInterface_ptr _this () { return this; }


         protected:
            ObjectXY_TypeSupportInterface () {};
            ~ObjectXY_TypeSupportInterface () {};
         private:
            ObjectXY_TypeSupportInterface (const ObjectXY_TypeSupportInterface &);
            ObjectXY_TypeSupportInterface & operator = (const ObjectXY_TypeSupportInterface &);
         };

         class ROSIDL_TYPESUPPORT_OPENSPLICE_CPP_PUBLIC_ssafy_msgs ObjectXY_DataWriter
         :
            virtual public DDS::DataWriter
         { 
         public:
            typedef ObjectXY_DataWriter_ptr _ptr_type;
            typedef ObjectXY_DataWriter_var _var_type;

            static ObjectXY_DataWriter_ptr _duplicate (ObjectXY_DataWriter_ptr obj);
            DDS::Boolean _local_is_a (const char * id);

            static ObjectXY_DataWriter_ptr _narrow (DDS::Object_ptr obj);
            static ObjectXY_DataWriter_ptr _unchecked_narrow (DDS::Object_ptr obj);
            static ObjectXY_DataWriter_ptr _nil () { return 0; }
            static const char * _local_id;
            ObjectXY_DataWriter_ptr _this () { return this; }

            virtual DDS::LongLong register_instance (const ObjectXY_& instance_data) = 0;
            virtual DDS::LongLong register_instance_w_timestamp (const ObjectXY_& instance_data, const DDS::Time_t& source_timestamp) = 0;
            virtual DDS::Long unregister_instance (const ObjectXY_& instance_data, DDS::LongLong handle) = 0;
            virtual DDS::Long unregister_instance_w_timestamp (const ObjectXY_& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
            virtual DDS::Long write (const ObjectXY_& instance_data, DDS::LongLong handle) = 0;
            virtual DDS::Long write_w_timestamp (const ObjectXY_& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
            virtual DDS::Long dispose (const ObjectXY_& instance_data, DDS::LongLong handle) = 0;
            virtual DDS::Long dispose_w_timestamp (const ObjectXY_& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
            virtual DDS::Long writedispose (const ObjectXY_& instance_data, DDS::LongLong handle) = 0;
            virtual DDS::Long writedispose_w_timestamp (const ObjectXY_& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
            virtual DDS::Long get_key_value (ObjectXY_& key_holder, DDS::LongLong handle) = 0;
            virtual DDS::LongLong lookup_instance (const ObjectXY_& instance_data) = 0;

         protected:
            ObjectXY_DataWriter () {};
            ~ObjectXY_DataWriter () {};
         private:
            ObjectXY_DataWriter (const ObjectXY_DataWriter &);
            ObjectXY_DataWriter & operator = (const ObjectXY_DataWriter &);
         };

         class ROSIDL_TYPESUPPORT_OPENSPLICE_CPP_PUBLIC_ssafy_msgs ObjectXY_DataReader
         :
            virtual public DDS::DataReader
         { 
         public:
            typedef ObjectXY_DataReader_ptr _ptr_type;
            typedef ObjectXY_DataReader_var _var_type;

            static ObjectXY_DataReader_ptr _duplicate (ObjectXY_DataReader_ptr obj);
            DDS::Boolean _local_is_a (const char * id);

            static ObjectXY_DataReader_ptr _narrow (DDS::Object_ptr obj);
            static ObjectXY_DataReader_ptr _unchecked_narrow (DDS::Object_ptr obj);
            static ObjectXY_DataReader_ptr _nil () { return 0; }
            static const char * _local_id;
            ObjectXY_DataReader_ptr _this () { return this; }

            virtual DDS::Long read (ObjectXY_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long take (ObjectXY_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long read_w_condition (ObjectXY_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::Long take_w_condition (ObjectXY_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::Long read_next_sample (ObjectXY_& received_data, DDS::SampleInfo& sample_info) = 0;
            virtual DDS::Long take_next_sample (ObjectXY_& received_data, DDS::SampleInfo& sample_info) = 0;
            virtual DDS::Long read_instance (ObjectXY_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long take_instance (ObjectXY_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long read_next_instance (ObjectXY_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long take_next_instance (ObjectXY_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long read_next_instance_w_condition (ObjectXY_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::Long take_next_instance_w_condition (ObjectXY_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::Long return_loan (ObjectXY_Seq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
            virtual DDS::Long get_key_value (ObjectXY_& key_holder, DDS::LongLong handle) = 0;
            virtual DDS::LongLong lookup_instance (const ObjectXY_& instance) = 0;

         protected:
            ObjectXY_DataReader () {};
            ~ObjectXY_DataReader () {};
         private:
            ObjectXY_DataReader (const ObjectXY_DataReader &);
            ObjectXY_DataReader & operator = (const ObjectXY_DataReader &);
         };

         class ROSIDL_TYPESUPPORT_OPENSPLICE_CPP_PUBLIC_ssafy_msgs ObjectXY_DataReaderView
         :
            virtual public DDS::DataReaderView
         { 
         public:
            typedef ObjectXY_DataReaderView_ptr _ptr_type;
            typedef ObjectXY_DataReaderView_var _var_type;

            static ObjectXY_DataReaderView_ptr _duplicate (ObjectXY_DataReaderView_ptr obj);
            DDS::Boolean _local_is_a (const char * id);

            static ObjectXY_DataReaderView_ptr _narrow (DDS::Object_ptr obj);
            static ObjectXY_DataReaderView_ptr _unchecked_narrow (DDS::Object_ptr obj);
            static ObjectXY_DataReaderView_ptr _nil () { return 0; }
            static const char * _local_id;
            ObjectXY_DataReaderView_ptr _this () { return this; }

            virtual DDS::Long read (ObjectXY_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long take (ObjectXY_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long read_w_condition (ObjectXY_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::Long take_w_condition (ObjectXY_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::Long read_next_sample (ObjectXY_& received_data, DDS::SampleInfo& sample_info) = 0;
            virtual DDS::Long take_next_sample (ObjectXY_& received_data, DDS::SampleInfo& sample_info) = 0;
            virtual DDS::Long read_instance (ObjectXY_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long take_instance (ObjectXY_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long read_next_instance (ObjectXY_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long take_next_instance (ObjectXY_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long read_next_instance_w_condition (ObjectXY_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::Long take_next_instance_w_condition (ObjectXY_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::Long return_loan (ObjectXY_Seq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
            virtual DDS::Long get_key_value (ObjectXY_& key_holder, DDS::LongLong handle) = 0;
            virtual DDS::LongLong lookup_instance (const ObjectXY_& instance) = 0;

         protected:
            ObjectXY_DataReaderView () {};
            ~ObjectXY_DataReaderView () {};
         private:
            ObjectXY_DataReaderView (const ObjectXY_DataReaderView &);
            ObjectXY_DataReaderView & operator = (const ObjectXY_DataReaderView &);
         };

      }
   }
}




#endif
